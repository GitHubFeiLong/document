
#user  nobody;
user root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    use epoll;#nginx工作模式，，epoll是linux平台下的高效模式，配合nginx的异步非阻塞作用	
    worker_connections  1024;
    accept_mutex on;    #设置网络连接的序列化,当一个新连接到达时，如果激活了accept_mutex，那么多个Worker将以串行方式来处理，其中有一个Worker会被唤醒，其他的Worker继续保持休眠状态;如果没有激活accept_mutex，那么所有的Worker都会被唤醒，不过只有一个Worker能获取新连接，其它的Worker会重新进入休眠状态,这就是惊群问题。更详细的解释http://huoding.com/2013/08/24/281
    multi_accept on;    #设置worker_poocess是否允许同时接受多个网络连接,默认一个worker一次只接受一个新连接,multi_accept设置为on后能接受多个，有利于性能提升
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay  on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
    # 开启负载均衡的服务器组
    upstream caogen_proxy{
	ip_hash; #每个请求按照ip的hash结果分配，同一个ip的访客固定访问一个后端服务器
        server 192.168.1.168:8087;
   	server 192.168.163.131:8080;     
    }

     #禁止通过Ip访问
     #    server{
     #        server_name _:
     #        return 404;
     #     }	

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
	charset utf-8;

        #access_log  logs/host.access.log  main;

#动静分离  静态文件交给nginx处理  动态交给tomcat    
#    location ~ .*\.(gif|jpg|jpeg|png|js|css)$ {  
#           root /usr/local/nginx/staticFiles/;
#           expires 1h; #缓存一小时
#     }
#
#     location ~ ^/(images|js|css)/ {
#           root /usr/local/nginx/staticFiles/;
#           expires 1h;
#     }


        location / {
            #root   html;
            #index  index.html index.htm;
            #root /home/centos7/Documents/data/images/;	
   	    proxy_pass http://caogen_proxy;
	    proxy_set_header Host $host;
	    proxy_set_header X-Forward-For $remote_addr;	
	    #index index.html index.htm;		
	}


	location /Content/img/ {
		root /usr/local/tomcat/apache-tomcat-8.5.47/webapps/supervision-mf-v1.0/;
	}
 	location /Conten/js/ {
	 	root /usr/local/tomcat/apache-tomcat-8.5.47/webapps/supervision-mf-v1.0/;	
	}
	location /Content/css/
	{
    	    root /usr/local/tomcat/apache-tomcat-8.5.47/webapps/supervision-mf-v1.0;
   	    expires 1h;
	}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
